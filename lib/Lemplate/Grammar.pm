#============================================================= -*-Perl-*-
#
# Lemplate::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Ingy döt Net   <ingy@cpan.org>
#
# ORIGINAL AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 2006-2008 Ingy döt Net.
#   Copyright (C) 1996-2000 Andy Wardley.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Lemplate distribution).
#
#========================================================================

package Lemplate::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision: 2.10 $ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE RAW PLUGIN FILTER MACRO JAVASCRIPT TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    );

# for historical reasons, != and == are converted to ne and eq to perform 
# stringwise comparison (mainly because it doesn't generate "non-numerical 
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al, 
# briefly for v2.04d and then took them out again in 2.04e.

%CMPOP = qw( 
    != ~=
    == ==
    <  <
    >  >
    >= >=
    <= <=
);


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{ 
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			"[" => 53,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"\"" => 20,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			'META' => 60,
			'WHILE' => 15,
			'SWITCH' => 16,
			'DEBUG' => 57,
			'THROW' => 56,
			'MACRO' => 63,
			'REF' => 61,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			"\${" => 30,
			'SET' => 32,
			'STOP' => 31,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'GET' => 69,
			'USE' => 26,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66,
			'CLEAR' => 38,
			'perl' => 36,
			'TRY' => 2,
			"\$" => 1,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'rawperl' => 9,
			'TEXT' => 44,
			'PROCESS' => 8,
			'LAST' => 7,
			'WRAPPER' => 11,
			'RAW' => 47
		},
		DEFAULT => -3,
		GOTOS => {
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'template' => 18,
			'atomexpr' => 49,
			'view' => 13,
			'sterm' => 55,
			'term' => 54,
			'anonblock' => 14,
			'chunks' => 67,
			'javascript' => 23,
			'assign' => 65,
			'ident' => 25,
			'try' => 68,
			'defblock' => 70,
			'use' => 27,
			'block' => 75,
			'setlist' => 62,
			'raw' => 22,
			'defblockname' => 64,
			'item' => 3,
			'chunk' => 5,
			'macro' => 33,
			'switch' => 35,
			'condition' => 37,
			'directive' => 45,
			'capture' => 10,
			'atomdir' => 46,
			'filter' => 48,
			'lterm' => 12,
			'wrapper' => 6,
			'loop' => 43
		}
	},
	{#State 1
		ACTIONS => {
			'IDENT' => 76
		}
	},
	{#State 2
		ACTIONS => {
			";" => 77
		}
	},
	{#State 3
		ACTIONS => {
			"(" => 78
		},
		DEFAULT => -129
	},
	{#State 4
		ACTIONS => {
			"\"" => 89,
			'LITERAL' => 80,
			'NUMBER' => 85,
			"\$" => 87,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'filename' => 86,
			'name' => 81,
			'names' => 79,
			'nameargs' => 82,
			'filepart' => 83
		}
	},
	{#State 5
		DEFAULT => -5
	},
	{#State 6
		DEFAULT => -44
	},
	{#State 7
		DEFAULT => -41
	},
	{#State 8
		ACTIONS => {
			'IDENT' => 84,
			'FILENAME' => 88,
			"\$" => 87,
			'NUMBER' => 85,
			"\"" => 89,
			'LITERAL' => 80
		},
		GOTOS => {
			'filename' => 86,
			'name' => 81,
			'nameargs' => 90,
			'names' => 79,
			'filepart' => 83
		}
	},
	{#State 9
		DEFAULT => -16
	},
	{#State 10
		DEFAULT => -11
	},
	{#State 11
		ACTIONS => {
			"\$" => 87,
			'NUMBER' => 85,
			"\"" => 89,
			'LITERAL' => 80,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'filepart' => 83,
			'nameargs' => 91,
			'names' => 79,
			'filename' => 86,
			'name' => 81
		}
	},
	{#State 12
		DEFAULT => -104
	},
	{#State 13
		DEFAULT => -15
	},
	{#State 14
		DEFAULT => -10
	},
	{#State 15
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'expr' => 92,
			'term' => 54,
			'sterm' => 55,
			'node' => 58,
			'lterm' => 12
		}
	},
	{#State 16
		ACTIONS => {
			"\"" => 20,
			'LITERAL' => 93,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34
		},
		GOTOS => {
			'lterm' => 12,
			'node' => 58,
			'term' => 54,
			'sterm' => 55,
			'expr' => 95,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 17
		ACTIONS => {
			";" => 96
		}
	},
	{#State 18
		ACTIONS => {
			'' => 97
		}
	},
	{#State 19
		ACTIONS => {
			";" => 98
		}
	},
	{#State 20
		DEFAULT => -177,
		GOTOS => {
			'quoted' => 99
		}
	},
	{#State 21
		DEFAULT => -42
	},
	{#State 22
		DEFAULT => -14
	},
	{#State 23
		DEFAULT => -26
	},
	{#State 24
		ACTIONS => {
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 93,
			"(" => 39,
			'IDENT' => 66,
			"[" => 53,
			"\$" => 1,
			'REF' => 61,
			'NOT' => 34,
			"{" => 52
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'expr' => 100,
			'lterm' => 12
		}
	},
	{#State 25
		ACTIONS => {
			'ASSIGN' => 102,
			'DOT' => 101
		},
		DEFAULT => -110
	},
	{#State 26
		ACTIONS => {
			'FILENAME' => 88,
			'IDENT' => 103,
			"\$" => 109,
			'LITERAL' => 106,
			"\"" => 108,
			'NUMBER' => 85,
			"\${" => 30
		},
		GOTOS => {
			'names' => 79,
			'filepart' => 83,
			'item' => 110,
			'name' => 81,
			'filename' => 86,
			'nameargs' => 105,
			'lvalue' => 104,
			'lnameargs' => 107
		}
	},
	{#State 27
		DEFAULT => -13
	},
	{#State 28
		ACTIONS => {
			"\$" => 109,
			"\"" => 108,
			'LITERAL' => 106,
			"\${" => 30,
			'NUMBER' => 85,
			'FILENAME' => 88,
			'IDENT' => 103
		},
		GOTOS => {
			'item' => 110,
			'filepart' => 83,
			'names' => 79,
			'lvalue' => 104,
			'lnameargs' => 111,
			'nameargs' => 105,
			'filename' => 86,
			'name' => 81
		}
	},
	{#State 29
		ACTIONS => {
			"\$" => 1,
			"\${" => 30,
			'LITERAL' => 114,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'item' => 3,
			'ident' => 112,
			'setlist' => 113,
			'assign' => 65
		}
	},
	{#State 30
		ACTIONS => {
			'IDENT' => 66,
			'REF' => 61,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			"\$" => 1
		},
		GOTOS => {
			'sterm' => 115,
			'node' => 58,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 31
		DEFAULT => -39
	},
	{#State 32
		ACTIONS => {
			"\${" => 30,
			'LITERAL' => 114,
			"\$" => 1,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'ident' => 112,
			'item' => 3,
			'assign' => 65,
			'setlist' => 116
		}
	},
	{#State 33
		DEFAULT => -12
	},
	{#State 34
		ACTIONS => {
			"\${" => 30,
			'NUMBER' => 73,
			'LITERAL' => 93,
			"\"" => 20,
			"(" => 39,
			'IDENT' => 66,
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61
		},
		GOTOS => {
			'lterm' => 12,
			'expr' => 117,
			'sterm' => 55,
			'term' => 54,
			'node' => 58,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 35
		DEFAULT => -23
	},
	{#State 36
		DEFAULT => -27
	},
	{#State 37
		DEFAULT => -22
	},
	{#State 38
		DEFAULT => -40
	},
	{#State 39
		ACTIONS => {
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			'LITERAL' => 42,
			"(" => 39,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'expr' => 119,
			'lterm' => 12,
			'assign' => 118,
			'ident' => 120,
			'item' => 3,
			'sterm' => 55,
			'term' => 54
		}
	},
	{#State 40
		DEFAULT => -38
	},
	{#State 41
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			'LITERAL' => 93,
			"\"" => 20,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'lterm' => 12,
			'expr' => 121,
			'term' => 54,
			'sterm' => 55,
			'node' => 58,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 42
		ACTIONS => {
			'ASSIGN' => 122
		},
		DEFAULT => -113
	},
	{#State 43
		DEFAULT => -24
	},
	{#State 44
		DEFAULT => -6
	},
	{#State 45
		DEFAULT => -8
	},
	{#State 46
		ACTIONS => {
			";" => -21
		},
		DEFAULT => -29
	},
	{#State 47
		ACTIONS => {
			'FILENAME' => 88,
			'IDENT' => 103,
			"\$" => 109,
			'LITERAL' => 106,
			"\"" => 108,
			'NUMBER' => 85,
			"\${" => 30
		},
		GOTOS => {
			'filepart' => 83,
			'item' => 110,
			'names' => 79,
			'lvalue' => 104,
			'lnameargs' => 123,
			'filename' => 86,
			'name' => 81,
			'nameargs' => 105
		}
	},
	{#State 48
		DEFAULT => -45
	},
	{#State 49
		ACTIONS => {
			'FOR' => 124,
			'IF' => 127,
			'FILTER' => 128,
			'UNLESS' => 125,
			'WHILE' => 126,
			'WRAPPER' => 129
		}
	},
	{#State 50
		ACTIONS => {
			'FILENAME' => 88,
			'IDENT' => 84,
			"\$" => 87,
			"\"" => 89,
			'LITERAL' => 80,
			'NUMBER' => 85
		},
		GOTOS => {
			'filename' => 86,
			'name' => 81,
			'names' => 79,
			'nameargs' => 130,
			'filepart' => 83
		}
	},
	{#State 51
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'REF' => 61,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 132
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'sterm' => 55,
			'term' => 133,
			'loopvar' => 131,
			'node' => 58,
			'lterm' => 12
		}
	},
	{#State 52
		ACTIONS => {
			"\${" => 30,
			'LITERAL' => 138,
			"\$" => 1,
			'IDENT' => 66
		},
		DEFAULT => -120,
		GOTOS => {
			'item' => 135,
			'param' => 136,
			'hash' => 137,
			'params' => 134
		}
	},
	{#State 53
		ACTIONS => {
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"]" => 142,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52
		},
		GOTOS => {
			'sterm' => 141,
			'term' => 140,
			'range' => 139,
			'list' => 143,
			'ident' => 94,
			'item' => 3,
			'node' => 58,
			'lterm' => 12
		}
	},
	{#State 54
		DEFAULT => -147
	},
	{#State 55
		DEFAULT => -105
	},
	{#State 56
		ACTIONS => {
			'IDENT' => 84,
			'FILENAME' => 88,
			'NUMBER' => 85,
			'LITERAL' => 80,
			"\"" => 89,
			"\$" => 87
		},
		GOTOS => {
			'name' => 81,
			'filename' => 86,
			'nameargs' => 144,
			'names' => 79,
			'filepart' => 83
		}
	},
	{#State 57
		ACTIONS => {
			'LITERAL' => 80,
			"\"" => 89,
			'NUMBER' => 85,
			"\$" => 87,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'nameargs' => 145,
			'names' => 79,
			'filename' => 86,
			'name' => 81,
			'filepart' => 83
		}
	},
	{#State 58
		DEFAULT => -128
	},
	{#State 59
		ACTIONS => {
			'DIV' => 155,
			'OR' => 148,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147,
			"?" => 152,
			";" => -17,
			'CAT' => 149,
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154
		},
		DEFAULT => -28
	},
	{#State 60
		ACTIONS => {
			'IDENT' => 158
		},
		GOTOS => {
			'meta' => 156,
			'metadata' => 157
		}
	},
	{#State 61
		ACTIONS => {
			'IDENT' => 66,
			"\${" => 30,
			"\$" => 1
		},
		GOTOS => {
			'node' => 58,
			'ident' => 159,
			'item' => 3
		}
	},
	{#State 62
		ACTIONS => {
			"\$" => 1,
			"\${" => 30,
			'LITERAL' => 114,
			'IDENT' => 66,
			'COMMA' => 161
		},
		DEFAULT => -20,
		GOTOS => {
			'node' => 58,
			'assign' => 160,
			'item' => 3,
			'ident' => 112
		}
	},
	{#State 63
		ACTIONS => {
			'IDENT' => 162
		}
	},
	{#State 64
		ACTIONS => {
			'IDENT' => 158
		},
		DEFAULT => -88,
		GOTOS => {
			'blockargs' => 164,
			'meta' => 156,
			'metadata' => 163
		}
	},
	{#State 65
		DEFAULT => -150
	},
	{#State 66
		DEFAULT => -131
	},
	{#State 67
		ACTIONS => {
			'MACRO' => 63,
			'REF' => 61,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'USE' => 26,
			'GET' => 69,
			'STOP' => 31,
			'SET' => 32,
			"\${" => 30,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'WHILE' => 15,
			'SWITCH' => 16,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57,
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			'TRY' => 2,
			'perl' => 36,
			"\$" => 1,
			'CLEAR' => 38,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41
		},
		DEFAULT => -2,
		GOTOS => {
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'setlist' => 62,
			'wrapper' => 6,
			'lterm' => 12,
			'defblock' => 70,
			'filter' => 48,
			'use' => 27,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'atomdir' => 46,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'condition' => 37,
			'anonblock' => 14,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'chunk' => 165,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'item' => 3
		}
	},
	{#State 68
		DEFAULT => -25
	},
	{#State 69
		ACTIONS => {
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\$" => 1,
			"[" => 53,
			'IDENT' => 66,
			"(" => 39,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30
		},
		GOTOS => {
			'lterm' => 12,
			'term' => 54,
			'node' => 58,
			'sterm' => 55,
			'expr' => 166,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 70
		DEFAULT => -9
	},
	{#State 71
		ACTIONS => {
			'IDENT' => 66,
			"(" => 39,
			'LITERAL' => 93,
			"\"" => 20,
			"\${" => 30,
			'NUMBER' => 73,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\$" => 1,
			"[" => 53
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'expr' => 167,
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'lterm' => 12
		}
	},
	{#State 72
		ACTIONS => {
			'NUMBER' => 85,
			'LITERAL' => 170,
			'IDENT' => 172,
			'FILENAME' => 88
		},
		DEFAULT => -88,
		GOTOS => {
			'blockname' => 168,
			'filepart' => 83,
			'blockargs' => 169,
			'meta' => 156,
			'metadata' => 163,
			'filename' => 171
		}
	},
	{#State 73
		DEFAULT => -114
	},
	{#State 74
		ACTIONS => {
			"\$" => 87,
			'NUMBER' => 85,
			"\"" => 89,
			'LITERAL' => 80,
			'IDENT' => 84,
			'FILENAME' => 88
		},
		GOTOS => {
			'filename' => 86,
			'name' => 81,
			'names' => 79,
			'nameargs' => 173,
			'filepart' => 83
		}
	},
	{#State 75
		DEFAULT => -1
	},
	{#State 76
		DEFAULT => -133
	},
	{#State 77
		ACTIONS => {
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			"[" => 53,
			'THROW' => 56,
			'DEBUG' => 57,
			'WHILE' => 15,
			'SWITCH' => 16,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'META' => 60,
			'REF' => 61,
			'MACRO' => 63,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'USE' => 26,
			'GET' => 69,
			'STOP' => 31,
			'SET' => 32,
			'NUMBER' => 73,
			"\${" => 30,
			'INCLUDE' => 74,
			'NOT' => 34,
			'TRY' => 2,
			'perl' => 36,
			"\$" => 1,
			'CLEAR' => 38,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'LITERAL' => 42,
			'VIEW' => 4,
			'LAST' => 7,
			'PROCESS' => 8,
			'rawperl' => 9,
			'TEXT' => 44,
			'RAW' => 47,
			'WRAPPER' => 11
		},
		DEFAULT => -3,
		GOTOS => {
			'expr' => 59,
			'statement' => 17,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'switch' => 35,
			'term' => 54,
			'sterm' => 55,
			'anonblock' => 14,
			'condition' => 37,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'block' => 174,
			'lterm' => 12,
			'directive' => 45,
			'chunks' => 67,
			'javascript' => 23,
			'assign' => 65,
			'try' => 68,
			'ident' => 25,
			'capture' => 10,
			'atomdir' => 46,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43
		}
	},
	{#State 78
		DEFAULT => -157,
		GOTOS => {
			'args' => 175
		}
	},
	{#State 79
		ACTIONS => {
			"+" => 177,
			"(" => 176
		},
		DEFAULT => -157,
		GOTOS => {
			'args' => 178
		}
	},
	{#State 80
		DEFAULT => -170
	},
	{#State 81
		DEFAULT => -167
	},
	{#State 82
		ACTIONS => {
			";" => 179
		}
	},
	{#State 83
		DEFAULT => -172
	},
	{#State 84
		DEFAULT => -174
	},
	{#State 85
		DEFAULT => -175
	},
	{#State 86
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -169
	},
	{#State 87
		ACTIONS => {
			"\${" => 30,
			"\$" => 1,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'ident' => 181,
			'item' => 3
		}
	},
	{#State 88
		DEFAULT => -173
	},
	{#State 89
		DEFAULT => -177,
		GOTOS => {
			'quoted' => 182
		}
	},
	{#State 90
		DEFAULT => -36
	},
	{#State 91
		ACTIONS => {
			";" => 183
		}
	},
	{#State 92
		ACTIONS => {
			"?" => 152,
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150,
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'CAT' => 149,
			'OR' => 148,
			'DIV' => 155,
			";" => 184
		}
	},
	{#State 93
		DEFAULT => -113
	},
	{#State 94
		ACTIONS => {
			'DOT' => 101
		},
		DEFAULT => -110
	},
	{#State 95
		ACTIONS => {
			'CMPOP' => 150,
			"+" => 154,
			'AND' => 153,
			"?" => 152,
			'OR' => 148,
			'CAT' => 149,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147,
			";" => 185,
			'DIV' => 155
		}
	},
	{#State 96
		DEFAULT => -7
	},
	{#State 97
		DEFAULT => 0
	},
	{#State 98
		DEFAULT => -79,
		GOTOS => {
			'@4-2' => 186
		}
	},
	{#State 99
		ACTIONS => {
			";" => 188,
			'IDENT' => 66,
			"\${" => 30,
			"\"" => 190,
			'TEXT' => 191,
			"\$" => 1
		},
		GOTOS => {
			'item' => 3,
			'ident' => 189,
			'quotable' => 187,
			'node' => 58
		}
	},
	{#State 100
		ACTIONS => {
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154,
			"?" => 152,
			'OR' => 148,
			'CAT' => 149,
			'MOD' => 151,
			"/" => 146,
			'BINOP' => 147,
			";" => 192,
			'DIV' => 155
		}
	},
	{#State 101
		ACTIONS => {
			"\${" => 30,
			'NUMBER' => 194,
			"\$" => 1,
			'IDENT' => 66
		},
		GOTOS => {
			'item' => 3,
			'node' => 193
		}
	},
	{#State 102
		ACTIONS => {
			'SWITCH' => 16,
			'WHILE' => 15,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'THROW' => 56,
			'DEBUG' => 57,
			"[" => 53,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			'GET' => 69,
			'BLOCK' => 196,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'UNLESS' => 71,
			'SET' => 32,
			"\${" => 30,
			'STOP' => 31,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'IDENT' => 66,
			'IF' => 24,
			'REF' => 61,
			'LITERAL' => 42,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'CLEAR' => 38,
			'NOT' => 34,
			'WRAPPER' => 11,
			'PROCESS' => 8,
			'LAST' => 7
		},
		GOTOS => {
			'wrapper' => 6,
			'setlist' => 62,
			'loop' => 43,
			'filter' => 48,
			'lterm' => 12,
			'assign' => 65,
			'javascript' => 23,
			'directive' => 198,
			'atomdir' => 46,
			'ident' => 120,
			'try' => 68,
			'sterm' => 55,
			'switch' => 35,
			'term' => 54,
			'condition' => 37,
			'atomexpr' => 49,
			'node' => 58,
			'expr' => 195,
			'mdir' => 197,
			'item' => 3
		}
	},
	{#State 103
		ACTIONS => {
			'ASSIGN' => -131
		},
		DEFAULT => -174
	},
	{#State 104
		ACTIONS => {
			'ASSIGN' => 199
		}
	},
	{#State 105
		DEFAULT => -159
	},
	{#State 106
		ACTIONS => {
			'ASSIGN' => -162
		},
		DEFAULT => -170
	},
	{#State 107
		DEFAULT => -75
	},
	{#State 108
		DEFAULT => -177,
		GOTOS => {
			'quoted' => 200
		}
	},
	{#State 109
		ACTIONS => {
			"\$" => 1,
			"\${" => 30,
			'IDENT' => 201
		},
		GOTOS => {
			'node' => 58,
			'ident' => 181,
			'item' => 3
		}
	},
	{#State 110
		DEFAULT => -160
	},
	{#State 111
		ACTIONS => {
			";" => 202
		}
	},
	{#State 112
		ACTIONS => {
			'ASSIGN' => 203,
			'DOT' => 101
		}
	},
	{#State 113
		ACTIONS => {
			"\$" => 1,
			'IDENT' => 66,
			'COMMA' => 161,
			"\${" => 30,
			'LITERAL' => 114
		},
		DEFAULT => -33,
		GOTOS => {
			'node' => 58,
			'assign' => 160,
			'item' => 3,
			'ident' => 112
		}
	},
	{#State 114
		ACTIONS => {
			'ASSIGN' => 122
		}
	},
	{#State 115
		ACTIONS => {
			"}" => 204
		}
	},
	{#State 116
		ACTIONS => {
			"\$" => 1,
			'COMMA' => 161,
			'IDENT' => 66,
			"\${" => 30,
			'LITERAL' => 114
		},
		DEFAULT => -32,
		GOTOS => {
			'assign' => 160,
			'item' => 3,
			'ident' => 112,
			'node' => 58
		}
	},
	{#State 117
		ACTIONS => {
			"/" => 146,
			'BINOP' => 147,
			'MOD' => 151,
			'DIV' => 155,
			'CMPOP' => 150,
			"+" => 154,
			'CAT' => 149
		},
		DEFAULT => -143
	},
	{#State 118
		ACTIONS => {
			")" => 205
		}
	},
	{#State 119
		ACTIONS => {
			'CMPOP' => 150,
			"?" => 152,
			"+" => 154,
			'AND' => 153,
			'DIV' => 155,
			'CAT' => 149,
			'OR' => 148,
			'BINOP' => 147,
			")" => 206,
			'MOD' => 151,
			"/" => 146
		}
	},
	{#State 120
		ACTIONS => {
			'ASSIGN' => 203,
			'DOT' => 101
		},
		DEFAULT => -110
	},
	{#State 121
		ACTIONS => {
			'CAT' => 149,
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154,
			'DIV' => 155,
			'OR' => 148,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147,
			"?" => 152
		},
		DEFAULT => -31
	},
	{#State 122
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'lterm' => 12,
			'expr' => 207,
			'term' => 54,
			'sterm' => 55,
			'node' => 58
		}
	},
	{#State 123
		DEFAULT => -76
	},
	{#State 124
		ACTIONS => {
			'IDENT' => 132,
			'NUMBER' => 73,
			"\${" => 30,
			'LITERAL' => 93,
			"\"" => 20,
			"{" => 52,
			'REF' => 61,
			"[" => 53,
			"\$" => 1
		},
		GOTOS => {
			'term' => 133,
			'node' => 58,
			'sterm' => 55,
			'loopvar' => 208,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 125
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			'LITERAL' => 93,
			"\"" => 20,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'expr' => 209,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 126
		ACTIONS => {
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			"[" => 53,
			"\$" => 1,
			"(" => 39,
			'IDENT' => 66,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			'LITERAL' => 93
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'lterm' => 12,
			'expr' => 210,
			'sterm' => 55,
			'term' => 54,
			'node' => 58
		}
	},
	{#State 127
		ACTIONS => {
			"(" => 39,
			'IDENT' => 66,
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 93,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			"[" => 53,
			"\$" => 1
		},
		GOTOS => {
			'expr' => 211,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 128
		ACTIONS => {
			"\"" => 108,
			'LITERAL' => 106,
			"\${" => 30,
			'NUMBER' => 85,
			"\$" => 109,
			'IDENT' => 103,
			'FILENAME' => 88
		},
		GOTOS => {
			'nameargs' => 105,
			'filename' => 86,
			'name' => 81,
			'lnameargs' => 212,
			'lvalue' => 104,
			'names' => 79,
			'item' => 110,
			'filepart' => 83
		}
	},
	{#State 129
		ACTIONS => {
			'NUMBER' => 85,
			'LITERAL' => 80,
			"\"" => 89,
			"\$" => 87,
			'IDENT' => 84,
			'FILENAME' => 88
		},
		GOTOS => {
			'filepart' => 83,
			'names' => 79,
			'nameargs' => 213,
			'filename' => 86,
			'name' => 81
		}
	},
	{#State 130
		DEFAULT => -34
	},
	{#State 131
		ACTIONS => {
			";" => 214
		}
	},
	{#State 132
		ACTIONS => {
			'IN' => 216,
			'ASSIGN' => 215
		},
		DEFAULT => -131
	},
	{#State 133
		DEFAULT => -157,
		GOTOS => {
			'args' => 217
		}
	},
	{#State 134
		ACTIONS => {
			"\${" => 30,
			'LITERAL' => 138,
			"\$" => 1,
			'COMMA' => 218,
			'IDENT' => 66
		},
		DEFAULT => -119,
		GOTOS => {
			'param' => 219,
			'item' => 135
		}
	},
	{#State 135
		ACTIONS => {
			'ASSIGN' => 220
		}
	},
	{#State 136
		DEFAULT => -123
	},
	{#State 137
		ACTIONS => {
			"}" => 221
		}
	},
	{#State 138
		ACTIONS => {
			'ASSIGN' => 222
		}
	},
	{#State 139
		ACTIONS => {
			"]" => 223
		}
	},
	{#State 140
		DEFAULT => -117
	},
	{#State 141
		ACTIONS => {
			'TO' => 224
		},
		DEFAULT => -105
	},
	{#State 142
		DEFAULT => -108
	},
	{#State 143
		ACTIONS => {
			"[" => 53,
			"]" => 226,
			"\$" => 1,
			"{" => 52,
			'REF' => 61,
			'NUMBER' => 73,
			"\${" => 30,
			'LITERAL' => 93,
			"\"" => 20,
			'COMMA' => 227,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'term' => 225,
			'sterm' => 55,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 144
		DEFAULT => -37
	},
	{#State 145
		DEFAULT => -43
	},
	{#State 146
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'lterm' => 12,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'expr' => 228
		}
	},
	{#State 147
		ACTIONS => {
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34
		},
		GOTOS => {
			'expr' => 229,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 148
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'lterm' => 12,
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'expr' => 230,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 149
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\"" => 20,
			'LITERAL' => 93,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'lterm' => 12,
			'term' => 54,
			'sterm' => 55,
			'node' => 58,
			'expr' => 231
		}
	},
	{#State 150
		ACTIONS => {
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 93,
			"(" => 39,
			'IDENT' => 66,
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'term' => 54,
			'sterm' => 55,
			'node' => 58,
			'expr' => 232,
			'lterm' => 12
		}
	},
	{#State 151
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'expr' => 233,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 152
		ACTIONS => {
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 93,
			"(" => 39,
			'IDENT' => 66,
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61
		},
		GOTOS => {
			'sterm' => 55,
			'term' => 54,
			'node' => 58,
			'expr' => 234,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 153
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			"\"" => 20,
			'LITERAL' => 93,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'expr' => 235,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 154
		ACTIONS => {
			'IDENT' => 66,
			"(" => 39,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			"\$" => 1,
			"[" => 53
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'expr' => 236,
			'node' => 58,
			'sterm' => 55,
			'term' => 54,
			'lterm' => 12
		}
	},
	{#State 155
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			"\"" => 20,
			'LITERAL' => 93,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'expr' => 237,
			'node' => 58,
			'term' => 54,
			'sterm' => 55,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 156
		DEFAULT => -100
	},
	{#State 157
		ACTIONS => {
			'IDENT' => 158,
			'COMMA' => 239
		},
		DEFAULT => -18,
		GOTOS => {
			'meta' => 238
		}
	},
	{#State 158
		ACTIONS => {
			'ASSIGN' => 240
		}
	},
	{#State 159
		ACTIONS => {
			'DOT' => 101
		},
		DEFAULT => -111
	},
	{#State 160
		DEFAULT => -148
	},
	{#State 161
		DEFAULT => -149
	},
	{#State 162
		ACTIONS => {
			"(" => 242,
			'RETURN' => 40,
			'CALL' => 41,
			'LITERAL' => 42,
			'NOT' => 34,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'CLEAR' => 38,
			'WRAPPER' => 11,
			'LAST' => 7,
			'PROCESS' => 8,
			'THROW' => 56,
			'DEBUG' => 57,
			'WHILE' => 15,
			'SWITCH' => 16,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			"[" => 53,
			'IDENT' => 66,
			'IF' => 24,
			'GET' => 69,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'BLOCK' => 196,
			'FILTER' => 28,
			'SET' => 32,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			"\${" => 30,
			'STOP' => 31,
			'REF' => 61
		},
		GOTOS => {
			'filter' => 48,
			'lterm' => 12,
			'directive' => 198,
			'assign' => 65,
			'javascript' => 23,
			'try' => 68,
			'ident' => 120,
			'atomdir' => 46,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'expr' => 241,
			'node' => 58,
			'mdir' => 243,
			'item' => 3,
			'term' => 54,
			'sterm' => 55,
			'switch' => 35,
			'condition' => 37,
			'atomexpr' => 49
		}
	},
	{#State 163
		ACTIONS => {
			'IDENT' => 158,
			'COMMA' => 239
		},
		DEFAULT => -87,
		GOTOS => {
			'meta' => 238
		}
	},
	{#State 164
		ACTIONS => {
			";" => 244
		}
	},
	{#State 165
		DEFAULT => -4
	},
	{#State 166
		ACTIONS => {
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'OR' => 148,
			'DIV' => 155,
			"?" => 152,
			'CAT' => 149,
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150
		},
		DEFAULT => -30
	},
	{#State 167
		ACTIONS => {
			'CMPOP' => 150,
			"+" => 154,
			'AND' => 153,
			"?" => 152,
			'OR' => 148,
			'CAT' => 149,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147,
			";" => 245,
			'DIV' => 155
		}
	},
	{#State 168
		DEFAULT => -84
	},
	{#State 169
		ACTIONS => {
			";" => 246
		}
	},
	{#State 170
		DEFAULT => -86
	},
	{#State 171
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -85
	},
	{#State 172
		ACTIONS => {
			'ASSIGN' => 240
		},
		DEFAULT => -174
	},
	{#State 173
		DEFAULT => -35
	},
	{#State 174
		ACTIONS => {
			'CATCH' => 247,
			'FINAL' => 248
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 249
		}
	},
	{#State 175
		ACTIONS => {
			'COMMA' => 254,
			"(" => 39,
			'IDENT' => 66,
			"\${" => 30,
			'NUMBER' => 73,
			'LITERAL' => 253,
			")" => 252,
			"\"" => 20,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			"[" => 53,
			"\$" => 1
		},
		GOTOS => {
			'sterm' => 55,
			'term' => 54,
			'item' => 250,
			'ident' => 251,
			'lterm' => 12,
			'expr' => 256,
			'param' => 255,
			'node' => 58
		}
	},
	{#State 176
		DEFAULT => -157,
		GOTOS => {
			'args' => 257
		}
	},
	{#State 177
		ACTIONS => {
			"\"" => 89,
			'LITERAL' => 80,
			'NUMBER' => 85,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'filepart' => 83,
			'name' => 258,
			'filename' => 86
		}
	},
	{#State 178
		ACTIONS => {
			"\"" => 20,
			'LITERAL' => 253,
			'COMMA' => 254,
			"(" => 39,
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			'REF' => 61
		},
		DEFAULT => -164,
		GOTOS => {
			'ident' => 251,
			'item' => 250,
			'expr' => 256,
			'param' => 255,
			'node' => 58,
			'lterm' => 12,
			'sterm' => 55,
			'term' => 54
		}
	},
	{#State 179
		DEFAULT => -77,
		GOTOS => {
			'@3-3' => 259
		}
	},
	{#State 180
		ACTIONS => {
			'NUMBER' => 85,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'filepart' => 260
		}
	},
	{#State 181
		ACTIONS => {
			'DOT' => 101
		},
		DEFAULT => -157,
		GOTOS => {
			'args' => 261
		}
	},
	{#State 182
		ACTIONS => {
			"\${" => 30,
			"\"" => 262,
			'TEXT' => 191,
			"\$" => 1,
			";" => 188,
			'IDENT' => 66
		},
		GOTOS => {
			'node' => 58,
			'ident' => 189,
			'item' => 3,
			'quotable' => 187
		}
	},
	{#State 183
		ACTIONS => {
			'CLEAR' => 38,
			'perl' => 36,
			"\$" => 1,
			'TRY' => 2,
			'NOT' => 34,
			'VIEW' => 4,
			'LITERAL' => 42,
			'CALL' => 41,
			"(" => 39,
			'RETURN' => 40,
			'TEXT' => 44,
			'rawperl' => 9,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			"[" => 53,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			'META' => 60,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			"\"" => 20,
			'SWITCH' => 16,
			'WHILE' => 15,
			'DEBUG' => 57,
			'THROW' => 56,
			'MACRO' => 63,
			'REF' => 61,
			'STOP' => 31,
			'SET' => 32,
			'INCLUDE' => 74,
			"\${" => 30,
			'NUMBER' => 73,
			'GET' => 69,
			'USE' => 26,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'wrapper' => 6,
			'setlist' => 62,
			'loop' => 43,
			'raw' => 22,
			'defblockname' => 64,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'atomdir' => 46,
			'ident' => 25,
			'capture' => 10,
			'try' => 68,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70,
			'block' => 263,
			'lterm' => 12,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'term' => 54,
			'switch' => 35,
			'sterm' => 55,
			'anonblock' => 14,
			'condition' => 37,
			'item' => 3,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'chunk' => 5
		}
	},
	{#State 184
		DEFAULT => -61,
		GOTOS => {
			'@2-3' => 264
		}
	},
	{#State 185
		ACTIONS => {
			'MACRO' => 63,
			'REF' => 61,
			'GET' => 69,
			'USE' => 26,
			'FILTER' => 28,
			'UNLESS' => 71,
			'DEFAULT' => 29,
			'BLOCK' => 72,
			"\${" => 30,
			'SET' => 32,
			'STOP' => 31,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'WHILE' => 15,
			'SWITCH' => 16,
			'META' => 60,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'THROW' => 56,
			'DEBUG' => 57,
			'TEXT' => 44,
			'rawperl' => 9,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'CLEAR' => 38,
			'NOT' => 34,
			'VIEW' => 4,
			'LITERAL' => 42,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41
		},
		DEFAULT => -3,
		GOTOS => {
			'chunk' => 5,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'item' => 3,
			'condition' => 37,
			'anonblock' => 14,
			'term' => 54,
			'sterm' => 55,
			'switch' => 35,
			'view' => 13,
			'macro' => 33,
			'atomexpr' => 49,
			'lterm' => 12,
			'block' => 265,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'try' => 68,
			'capture' => 10,
			'ident' => 25,
			'atomdir' => 46,
			'directive' => 45,
			'chunks' => 67,
			'javascript' => 23,
			'assign' => 65,
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'setlist' => 62,
			'wrapper' => 6
		}
	},
	{#State 186
		ACTIONS => {
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'CLEAR' => 38,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'rawperl' => 9,
			'TEXT' => 44,
			'PROCESS' => 8,
			'LAST' => 7,
			'WRAPPER' => 11,
			'RAW' => 47,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'SWITCH' => 16,
			'WHILE' => 15,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57,
			'MACRO' => 63,
			'REF' => 61,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'GET' => 69,
			'USE' => 26,
			'STOP' => 31,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			'SET' => 32,
			"\${" => 30,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24
		},
		DEFAULT => -3,
		GOTOS => {
			'chunk' => 5,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'item' => 3,
			'condition' => 37,
			'anonblock' => 14,
			'sterm' => 55,
			'term' => 54,
			'switch' => 35,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'lterm' => 12,
			'block' => 266,
			'use' => 27,
			'defblock' => 70,
			'filter' => 48,
			'atomdir' => 46,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'wrapper' => 6,
			'setlist' => 62
		}
	},
	{#State 187
		DEFAULT => -176
	},
	{#State 188
		DEFAULT => -180
	},
	{#State 189
		ACTIONS => {
			'DOT' => 101
		},
		DEFAULT => -178
	},
	{#State 190
		DEFAULT => -112
	},
	{#State 191
		DEFAULT => -179
	},
	{#State 192
		ACTIONS => {
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			'TRY' => 2,
			'perl' => 36,
			"\$" => 1,
			'CLEAR' => 38,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'MACRO' => 63,
			'REF' => 61,
			'UNLESS' => 71,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'BLOCK' => 72,
			'GET' => 69,
			'USE' => 26,
			"\${" => 30,
			'SET' => 32,
			'STOP' => 31,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'WHILE' => 15,
			'SWITCH' => 16,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			"\"" => 20,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57
		},
		DEFAULT => -3,
		GOTOS => {
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'anonblock' => 14,
			'condition' => 37,
			'atomexpr' => 49,
			'macro' => 33,
			'view' => 13,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'lterm' => 12,
			'block' => 267,
			'directive' => 45,
			'chunks' => 67,
			'assign' => 65,
			'javascript' => 23,
			'capture' => 10,
			'ident' => 25,
			'try' => 68,
			'atomdir' => 46,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43
		}
	},
	{#State 193
		DEFAULT => -126
	},
	{#State 194
		DEFAULT => -127
	},
	{#State 195
		ACTIONS => {
			'MOD' => 151,
			"/" => 146,
			'BINOP' => 147,
			'LITERAL' => -151,
			'OR' => 148,
			'DIV' => 155,
			'COMMA' => -151,
			"?" => 152,
			"\$" => -151,
			"\${" => -151,
			'CAT' => 149,
			'IDENT' => -151,
			";" => -151,
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150
		},
		DEFAULT => -28
	},
	{#State 196
		ACTIONS => {
			";" => 268
		}
	},
	{#State 197
		DEFAULT => -90
	},
	{#State 198
		DEFAULT => -93
	},
	{#State 199
		ACTIONS => {
			"\$" => 87,
			'LITERAL' => 80,
			"\"" => 89,
			'NUMBER' => 85,
			'FILENAME' => 88,
			'IDENT' => 84
		},
		GOTOS => {
			'filepart' => 83,
			'name' => 81,
			'filename' => 86,
			'names' => 79,
			'nameargs' => 269
		}
	},
	{#State 200
		ACTIONS => {
			"\$" => 1,
			'TEXT' => 191,
			"\"" => 270,
			"\${" => 30,
			";" => 188,
			'IDENT' => 66
		},
		GOTOS => {
			'quotable' => 187,
			'item' => 3,
			'ident' => 189,
			'node' => 58
		}
	},
	{#State 201
		ACTIONS => {
			'ASSIGN' => -133
		},
		DEFAULT => -131
	},
	{#State 202
		ACTIONS => {
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			'TRY' => 2,
			"\$" => 1,
			'perl' => 36,
			'CLEAR' => 38,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'MACRO' => 63,
			'REF' => 61,
			'FILTER' => 28,
			'BLOCK' => 72,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'USE' => 26,
			'GET' => 69,
			'STOP' => 31,
			'SET' => 32,
			"\${" => 30,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'SWITCH' => 16,
			'WHILE' => 15,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57
		},
		DEFAULT => -3,
		GOTOS => {
			'chunk' => 5,
			'node' => 58,
			'statement' => 17,
			'expr' => 59,
			'item' => 3,
			'condition' => 37,
			'anonblock' => 14,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'block' => 271,
			'lterm' => 12,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70,
			'atomdir' => 46,
			'ident' => 25,
			'capture' => 10,
			'try' => 68,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'wrapper' => 6,
			'setlist' => 62
		}
	},
	{#State 203
		ACTIONS => {
			"(" => 39,
			'IDENT' => 66,
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 93,
			'REF' => 61,
			'NOT' => 34,
			"{" => 52,
			"[" => 53,
			"\$" => 1
		},
		GOTOS => {
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'expr' => 272,
			'lterm' => 12,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 204
		DEFAULT => -132
	},
	{#State 205
		DEFAULT => -145
	},
	{#State 206
		DEFAULT => -146
	},
	{#State 207
		ACTIONS => {
			'AND' => 153,
			"+" => 154,
			'CMPOP' => 150,
			'CAT' => 149,
			"?" => 152,
			'DIV' => 155,
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'OR' => 148
		},
		DEFAULT => -152
	},
	{#State 208
		DEFAULT => -60
	},
	{#State 209
		ACTIONS => {
			"?" => 152,
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150,
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'CAT' => 149,
			'OR' => 148,
			'DIV' => 155
		},
		DEFAULT => -49
	},
	{#State 210
		ACTIONS => {
			'CMPOP' => 150,
			"?" => 152,
			'AND' => 153,
			"+" => 154,
			'DIV' => 155,
			'CAT' => 149,
			'OR' => 148,
			'BINOP' => 147,
			'MOD' => 151,
			"/" => 146
		},
		DEFAULT => -63
	},
	{#State 211
		ACTIONS => {
			'DIV' => 155,
			'OR' => 148,
			'CAT' => 149,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147,
			'CMPOP' => 150,
			"+" => 154,
			'AND' => 153,
			"?" => 152
		},
		DEFAULT => -47
	},
	{#State 212
		DEFAULT => -82
	},
	{#State 213
		DEFAULT => -68
	},
	{#State 214
		DEFAULT => -58,
		GOTOS => {
			'@1-3' => 273
		}
	},
	{#State 215
		ACTIONS => {
			"[" => 53,
			"\$" => 1,
			"{" => 52,
			'REF' => 61,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			'LITERAL' => 93,
			'IDENT' => 66
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'term' => 274,
			'node' => 58,
			'sterm' => 55,
			'lterm' => 12
		}
	},
	{#State 216
		ACTIONS => {
			'LITERAL' => 93,
			"\"" => 20,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52
		},
		GOTOS => {
			'sterm' => 55,
			'term' => 275,
			'node' => 58,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 217
		ACTIONS => {
			'LITERAL' => 253,
			"\"" => 20,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39,
			'COMMA' => 254,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34
		},
		DEFAULT => -66,
		GOTOS => {
			'term' => 54,
			'sterm' => 55,
			'param' => 255,
			'node' => 58,
			'expr' => 256,
			'lterm' => 12,
			'item' => 250,
			'ident' => 251
		}
	},
	{#State 218
		DEFAULT => -122
	},
	{#State 219
		DEFAULT => -121
	},
	{#State 220
		ACTIONS => {
			'IDENT' => 66,
			"(" => 39,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\$" => 1,
			"[" => 53
		},
		GOTOS => {
			'lterm' => 12,
			'sterm' => 55,
			'node' => 58,
			'term' => 54,
			'expr' => 276,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 221
		DEFAULT => -109
	},
	{#State 222
		ACTIONS => {
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'lterm' => 12,
			'expr' => 277,
			'node' => 58,
			'term' => 54,
			'sterm' => 55
		}
	},
	{#State 223
		DEFAULT => -107
	},
	{#State 224
		ACTIONS => {
			'REF' => 61,
			'IDENT' => 66,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			'LITERAL' => 93,
			"\$" => 1
		},
		GOTOS => {
			'sterm' => 278,
			'node' => 58,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 225
		DEFAULT => -115
	},
	{#State 226
		DEFAULT => -106
	},
	{#State 227
		DEFAULT => -116
	},
	{#State 228
		ACTIONS => {
			'MOD' => 151,
			'DIV' => 155
		},
		DEFAULT => -135
	},
	{#State 229
		ACTIONS => {
			"/" => 146,
			'DIV' => 155,
			'MOD' => 151,
			"+" => 154
		},
		DEFAULT => -134
	},
	{#State 230
		ACTIONS => {
			"/" => 146,
			'BINOP' => 147,
			'CAT' => 149,
			"+" => 154,
			'CMPOP' => 150,
			'DIV' => 155,
			'MOD' => 151
		},
		DEFAULT => -142
	},
	{#State 231
		ACTIONS => {
			"+" => 154,
			'CMPOP' => 150,
			'DIV' => 155,
			'MOD' => 151,
			"/" => 146,
			'BINOP' => 147
		},
		DEFAULT => -140
	},
	{#State 232
		ACTIONS => {
			"/" => 146,
			'BINOP' => 147,
			'MOD' => 151,
			'DIV' => 155,
			"+" => 154
		},
		DEFAULT => -139
	},
	{#State 233
		DEFAULT => -138
	},
	{#State 234
		ACTIONS => {
			"?" => 152,
			'AND' => 153,
			"+" => 154,
			":" => 279,
			'CMPOP' => 150,
			'DIV' => 155,
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'CAT' => 149,
			'OR' => 148
		}
	},
	{#State 235
		ACTIONS => {
			"+" => 154,
			'CMPOP' => 150,
			'CAT' => 149,
			'MOD' => 151,
			'DIV' => 155,
			"/" => 146,
			'BINOP' => 147
		},
		DEFAULT => -141
	},
	{#State 236
		ACTIONS => {
			'DIV' => 155,
			'MOD' => 151,
			"/" => 146
		},
		DEFAULT => -136
	},
	{#State 237
		ACTIONS => {
			'MOD' => 151
		},
		DEFAULT => -137
	},
	{#State 238
		DEFAULT => -98
	},
	{#State 239
		DEFAULT => -99
	},
	{#State 240
		ACTIONS => {
			'LITERAL' => 281,
			"\"" => 280,
			'NUMBER' => 282
		}
	},
	{#State 241
		ACTIONS => {
			'AND' => 153,
			"+" => 154,
			'CMPOP' => 150,
			'CAT' => 149,
			"?" => 152,
			'BINOP' => 147,
			'MOD' => 151,
			"/" => 146,
			'OR' => 148,
			'DIV' => 155
		},
		DEFAULT => -28
	},
	{#State 242
		ACTIONS => {
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			'NUMBER' => 73,
			"\${" => 30,
			'LITERAL' => 42,
			"\"" => 20,
			"(" => 39,
			'IDENT' => 283
		},
		GOTOS => {
			'term' => 54,
			'sterm' => 55,
			'margs' => 284,
			'assign' => 118,
			'item' => 3,
			'ident' => 120,
			'node' => 58,
			'expr' => 119,
			'lterm' => 12
		}
	},
	{#State 243
		DEFAULT => -92
	},
	{#State 244
		ACTIONS => {
			'MACRO' => 63,
			'REF' => 61,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'FILTER' => 28,
			'GET' => 69,
			'USE' => 26,
			'SET' => 32,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'STOP' => 31,
			"\${" => 30,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			"[" => 53,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			'WHILE' => 15,
			'SWITCH' => 16,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'NEXT' => 21,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57,
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			'perl' => 36,
			"\$" => 1,
			'TRY' => 2,
			'CLEAR' => 38,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41
		},
		DEFAULT => -3,
		GOTOS => {
			'try' => 68,
			'ident' => 25,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'block' => 75,
			'use' => 27,
			'defblock' => 70,
			'setlist' => 62,
			'defblockname' => 64,
			'raw' => 22,
			'template' => 285,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'view' => 13,
			'atomexpr' => 49,
			'anonblock' => 14,
			'sterm' => 55,
			'term' => 54,
			'atomdir' => 46,
			'capture' => 10,
			'directive' => 45,
			'lterm' => 12,
			'filter' => 48,
			'loop' => 43,
			'wrapper' => 6,
			'item' => 3,
			'chunk' => 5,
			'macro' => 33,
			'condition' => 37,
			'switch' => 35
		}
	},
	{#State 245
		ACTIONS => {
			'RAW' => 47,
			'WRAPPER' => 11,
			'LAST' => 7,
			'PROCESS' => 8,
			'rawperl' => 9,
			'TEXT' => 44,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'LITERAL' => 42,
			'VIEW' => 4,
			'NOT' => 34,
			'CLEAR' => 38,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66,
			'NUMBER' => 73,
			'STOP' => 31,
			'INCLUDE' => 74,
			'SET' => 32,
			"\${" => 30,
			'UNLESS' => 71,
			'DEFAULT' => 29,
			'BLOCK' => 72,
			'FILTER' => 28,
			'GET' => 69,
			'USE' => 26,
			'REF' => 61,
			'MACRO' => 63,
			'DEBUG' => 57,
			'THROW' => 56,
			"\"" => 20,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			'META' => 60,
			'SWITCH' => 16,
			'WHILE' => 15,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"[" => 53
		},
		DEFAULT => -3,
		GOTOS => {
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'anonblock' => 14,
			'condition' => 37,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'item' => 3,
			'chunk' => 5,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'loop' => 43,
			'wrapper' => 6,
			'setlist' => 62,
			'defblockname' => 64,
			'raw' => 22,
			'atomdir' => 46,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'block' => 286,
			'lterm' => 12,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70
		}
	},
	{#State 246
		ACTIONS => {
			'UNLESS' => 71,
			'BLOCK' => 72,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'GET' => 69,
			'USE' => 26,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			"\${" => 30,
			'STOP' => 31,
			'SET' => 32,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			'MACRO' => 63,
			'REF' => 61,
			'SWITCH' => 16,
			'WHILE' => 15,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'META' => 60,
			'THROW' => 56,
			'DEBUG' => 57,
			"[" => 53,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			'WRAPPER' => 11,
			'RAW' => 47,
			'rawperl' => 9,
			'TEXT' => 44,
			'PROCESS' => 8,
			'LAST' => 7,
			'LITERAL' => 42,
			'VIEW' => 4,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'perl' => 36,
			'TRY' => 2,
			"\$" => 1,
			'CLEAR' => 38,
			'NOT' => 34
		},
		DEFAULT => -3,
		GOTOS => {
			'term' => 54,
			'switch' => 35,
			'sterm' => 55,
			'anonblock' => 14,
			'condition' => 37,
			'atomexpr' => 49,
			'macro' => 33,
			'view' => 13,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'block' => 287,
			'lterm' => 12,
			'chunks' => 67,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'try' => 68,
			'ident' => 25,
			'capture' => 10,
			'atomdir' => 46
		}
	},
	{#State 247
		ACTIONS => {
			";" => 288,
			'IDENT' => 84,
			'FILENAME' => 88,
			'DEFAULT' => 289,
			'NUMBER' => 85
		},
		GOTOS => {
			'filepart' => 83,
			'filename' => 290
		}
	},
	{#State 248
		ACTIONS => {
			";" => 291
		}
	},
	{#State 249
		ACTIONS => {
			'END' => 292
		}
	},
	{#State 250
		ACTIONS => {
			'ASSIGN' => 220,
			"(" => 78
		},
		DEFAULT => -129
	},
	{#State 251
		ACTIONS => {
			'ASSIGN' => 293,
			'DOT' => 101
		},
		DEFAULT => -110
	},
	{#State 252
		DEFAULT => -130
	},
	{#State 253
		ACTIONS => {
			'ASSIGN' => 222
		},
		DEFAULT => -113
	},
	{#State 254
		DEFAULT => -156
	},
	{#State 255
		DEFAULT => -154
	},
	{#State 256
		ACTIONS => {
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154,
			'CAT' => 149,
			"?" => 152,
			'DIV' => 155,
			'OR' => 148,
			"/" => 146,
			'MOD' => 151,
			'BINOP' => 147
		},
		DEFAULT => -153
	},
	{#State 257
		ACTIONS => {
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			")" => 294,
			'LITERAL' => 253,
			'COMMA' => 254,
			"(" => 39,
			'IDENT' => 66
		},
		GOTOS => {
			'ident' => 251,
			'item' => 250,
			'expr' => 256,
			'param' => 255,
			'node' => 58,
			'lterm' => 12,
			'term' => 54,
			'sterm' => 55
		}
	},
	{#State 258
		DEFAULT => -166
	},
	{#State 259
		ACTIONS => {
			'WHILE' => 15,
			'SWITCH' => 16,
			'META' => 60,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'THROW' => 56,
			'DEBUG' => 57,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'USE' => 26,
			'GET' => 69,
			'BLOCK' => 72,
			'FILTER' => 28,
			'UNLESS' => 71,
			'DEFAULT' => 29,
			'INCLUDE' => 74,
			'SET' => 32,
			'NUMBER' => 73,
			'STOP' => 31,
			"\${" => 30,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			'MACRO' => 63,
			'REF' => 61,
			'VIEW' => 4,
			'LITERAL' => 42,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'CLEAR' => 38,
			'NOT' => 34,
			'WRAPPER' => 11,
			'RAW' => 47,
			'TEXT' => 44,
			'rawperl' => 9,
			'LAST' => 7,
			'PROCESS' => 8
		},
		DEFAULT => -3,
		GOTOS => {
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'chunk' => 5,
			'item' => 3,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'condition' => 37,
			'anonblock' => 14,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'use' => 27,
			'defblock' => 70,
			'filter' => 48,
			'lterm' => 12,
			'block' => 295,
			'javascript' => 23,
			'assign' => 65,
			'directive' => 45,
			'chunks' => 67,
			'atomdir' => 46,
			'try' => 68,
			'capture' => 10,
			'ident' => 25,
			'raw' => 22,
			'defblockname' => 64,
			'wrapper' => 6,
			'setlist' => 62,
			'loop' => 43
		}
	},
	{#State 260
		DEFAULT => -171
	},
	{#State 261
		ACTIONS => {
			'LITERAL' => 253,
			"\"" => 20,
			"(" => 39,
			'COMMA' => 254,
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			'REF' => 61
		},
		DEFAULT => -163,
		GOTOS => {
			'term' => 54,
			'sterm' => 55,
			'ident' => 251,
			'item' => 250,
			'lterm' => 12,
			'expr' => 256,
			'param' => 255,
			'node' => 58
		}
	},
	{#State 262
		DEFAULT => -168
	},
	{#State 263
		ACTIONS => {
			'END' => 296
		}
	},
	{#State 264
		ACTIONS => {
			'CLEAR' => 38,
			'TRY' => 2,
			"\$" => 1,
			'perl' => 36,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			"[" => 53,
			"{" => 52,
			'FOR' => 51,
			'INSERT' => 50,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			"\"" => 20,
			'META' => 60,
			'WHILE' => 15,
			'SWITCH' => 16,
			'DEBUG' => 57,
			'THROW' => 56,
			'MACRO' => 63,
			'REF' => 61,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'SET' => 32,
			"\${" => 30,
			'STOP' => 31,
			'DEFAULT' => 29,
			'BLOCK' => 72,
			'UNLESS' => 71,
			'FILTER' => 28,
			'USE' => 26,
			'GET' => 69,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 3,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'chunk' => 5,
			'atomexpr' => 49,
			'macro' => 33,
			'view' => 13,
			'sterm' => 55,
			'term' => 54,
			'switch' => 35,
			'anonblock' => 14,
			'condition' => 37,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'atomdir' => 46,
			'capture' => 10,
			'try' => 68,
			'ident' => 25,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70,
			'lterm' => 12,
			'block' => 297,
			'wrapper' => 6,
			'setlist' => 62,
			'loop' => 43,
			'raw' => 22,
			'defblockname' => 64
		}
	},
	{#State 265
		ACTIONS => {
			'CASE' => 298
		},
		DEFAULT => -57,
		GOTOS => {
			'case' => 299
		}
	},
	{#State 266
		ACTIONS => {
			'END' => 300
		}
	},
	{#State 267
		ACTIONS => {
			'ELSE' => 301,
			'ELSIF' => 302
		},
		DEFAULT => -52,
		GOTOS => {
			'else' => 303
		}
	},
	{#State 268
		ACTIONS => {
			'rawperl' => 9,
			'TEXT' => 44,
			'PROCESS' => 8,
			'LAST' => 7,
			'WRAPPER' => 11,
			'RAW' => 47,
			'CLEAR' => 38,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'MACRO' => 63,
			'REF' => 61,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'SET' => 32,
			'STOP' => 31,
			"\${" => 30,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'USE' => 26,
			'GET' => 69,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66,
			"[" => 53,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'META' => 60,
			'WHILE' => 15,
			'SWITCH' => 16,
			'DEBUG' => 57,
			'THROW' => 56
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 12,
			'block' => 304,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70,
			'atomdir' => 46,
			'capture' => 10,
			'try' => 68,
			'ident' => 25,
			'assign' => 65,
			'javascript' => 23,
			'chunks' => 67,
			'directive' => 45,
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'wrapper' => 6,
			'setlist' => 62,
			'chunk' => 5,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'item' => 3,
			'anonblock' => 14,
			'condition' => 37,
			'sterm' => 55,
			'switch' => 35,
			'term' => 54,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33
		}
	},
	{#State 269
		DEFAULT => -158
	},
	{#State 270
		ACTIONS => {
			'ASSIGN' => -161
		},
		DEFAULT => -168
	},
	{#State 271
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 272
		ACTIONS => {
			'DIV' => 155,
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'OR' => 148,
			"?" => 152,
			'CAT' => 149,
			'AND' => 153,
			"+" => 154,
			'CMPOP' => 150
		},
		DEFAULT => -151
	},
	{#State 273
		ACTIONS => {
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			'CLEAR' => 38,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'MACRO' => 63,
			'REF' => 61,
			'NUMBER' => 73,
			'SET' => 32,
			'STOP' => 31,
			"\${" => 30,
			'INCLUDE' => 74,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'BLOCK' => 72,
			'UNLESS' => 71,
			'GET' => 69,
			'USE' => 26,
			'IF' => 24,
			'IDENT' => 66,
			";" => -19,
			"[" => 53,
			"{" => 52,
			'FOR' => 51,
			'INSERT' => 50,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			"\"" => 20,
			'META' => 60,
			'WHILE' => 15,
			'SWITCH' => 16,
			'DEBUG' => 57,
			'THROW' => 56
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 55,
			'term' => 54,
			'switch' => 35,
			'condition' => 37,
			'anonblock' => 14,
			'atomexpr' => 49,
			'macro' => 33,
			'view' => 13,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'defblock' => 70,
			'filter' => 48,
			'use' => 27,
			'lterm' => 12,
			'block' => 306,
			'chunks' => 67,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'capture' => 10,
			'try' => 68,
			'ident' => 25,
			'atomdir' => 46
		}
	},
	{#State 274
		DEFAULT => -157,
		GOTOS => {
			'args' => 307
		}
	},
	{#State 275
		DEFAULT => -157,
		GOTOS => {
			'args' => 308
		}
	},
	{#State 276
		ACTIONS => {
			'AND' => 153,
			"+" => 154,
			'CMPOP' => 150,
			'CAT' => 149,
			'MOD' => 151,
			'DIV' => 155,
			"?" => 152,
			"/" => 146,
			'BINOP' => 147,
			'OR' => 148
		},
		DEFAULT => -125
	},
	{#State 277
		ACTIONS => {
			'MOD' => 151,
			'DIV' => 155,
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154,
			'CAT' => 149,
			"?" => 152,
			'OR' => 148,
			"/" => 146,
			'BINOP' => 147
		},
		DEFAULT => -124
	},
	{#State 278
		DEFAULT => -118
	},
	{#State 279
		ACTIONS => {
			'REF' => 61,
			'NOT' => 34,
			"{" => 52,
			"[" => 53,
			"\$" => 1,
			"(" => 39,
			'IDENT' => 66,
			'NUMBER' => 73,
			"\${" => 30,
			"\"" => 20,
			'LITERAL' => 93
		},
		GOTOS => {
			'expr' => 309,
			'node' => 58,
			'term' => 54,
			'sterm' => 55,
			'lterm' => 12,
			'ident' => 94,
			'item' => 3
		}
	},
	{#State 280
		ACTIONS => {
			'TEXT' => 310
		}
	},
	{#State 281
		DEFAULT => -101
	},
	{#State 282
		DEFAULT => -103
	},
	{#State 283
		ACTIONS => {
			'IDENT' => -97,
			")" => -97,
			'COMMA' => -97
		},
		DEFAULT => -131
	},
	{#State 284
		ACTIONS => {
			")" => 313,
			'COMMA' => 312,
			'IDENT' => 311
		}
	},
	{#State 285
		ACTIONS => {
			'END' => 314
		}
	},
	{#State 286
		ACTIONS => {
			'ELSIF' => 302,
			'ELSE' => 301
		},
		DEFAULT => -52,
		GOTOS => {
			'else' => 315
		}
	},
	{#State 287
		ACTIONS => {
			'END' => 316
		}
	},
	{#State 288
		ACTIONS => {
			'PROCESS' => 8,
			'LAST' => 7,
			'TEXT' => 44,
			'rawperl' => 9,
			'RAW' => 47,
			'WRAPPER' => 11,
			'NOT' => 34,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'CLEAR' => 38,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			'VIEW' => 4,
			'LITERAL' => 42,
			'REF' => 61,
			'MACRO' => 63,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			'GET' => 69,
			'USE' => 26,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'UNLESS' => 71,
			'BLOCK' => 72,
			"\${" => 30,
			'STOP' => 31,
			'SET' => 32,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			"[" => 53,
			'THROW' => 56,
			'DEBUG' => 57,
			'WHILE' => 15,
			'SWITCH' => 16,
			'META' => 60,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19
		},
		DEFAULT => -3,
		GOTOS => {
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'switch' => 35,
			'sterm' => 55,
			'term' => 54,
			'anonblock' => 14,
			'condition' => 37,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'block' => 317,
			'lterm' => 12,
			'chunks' => 67,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'try' => 68,
			'capture' => 10,
			'ident' => 25,
			'atomdir' => 46,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43
		}
	},
	{#State 289
		ACTIONS => {
			";" => 318
		}
	},
	{#State 290
		ACTIONS => {
			'DOT' => 180,
			";" => 319
		}
	},
	{#State 291
		ACTIONS => {
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			'USE' => 26,
			'GET' => 69,
			'BLOCK' => 72,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'INCLUDE' => 74,
			'STOP' => 31,
			'SET' => 32,
			"\${" => 30,
			'NUMBER' => 73,
			'REF' => 61,
			'MACRO' => 63,
			'THROW' => 56,
			'DEBUG' => 57,
			'SWITCH' => 16,
			'WHILE' => 15,
			'META' => 60,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			"[" => 53,
			'RAW' => 47,
			'WRAPPER' => 11,
			'PROCESS' => 8,
			'LAST' => 7,
			'TEXT' => 44,
			'rawperl' => 9,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			'VIEW' => 4,
			'LITERAL' => 42,
			'NOT' => 34,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'CLEAR' => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'term' => 54,
			'switch' => 35,
			'sterm' => 55,
			'condition' => 37,
			'anonblock' => 14,
			'item' => 3,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'chunk' => 5,
			'wrapper' => 6,
			'setlist' => 62,
			'loop' => 43,
			'raw' => 22,
			'defblockname' => 64,
			'javascript' => 23,
			'assign' => 65,
			'directive' => 45,
			'chunks' => 67,
			'atomdir' => 46,
			'ident' => 25,
			'capture' => 10,
			'try' => 68,
			'use' => 27,
			'defblock' => 70,
			'filter' => 48,
			'block' => 320,
			'lterm' => 12
		}
	},
	{#State 292
		DEFAULT => -69
	},
	{#State 293
		ACTIONS => {
			"\"" => 20,
			'LITERAL' => 93,
			"\${" => 30,
			'NUMBER' => 73,
			'IDENT' => 66,
			"(" => 39,
			"\$" => 1,
			"[" => 53,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61
		},
		GOTOS => {
			'lterm' => 12,
			'expr' => 321,
			'node' => 58,
			'term' => 54,
			'sterm' => 55,
			'item' => 3,
			'ident' => 94
		}
	},
	{#State 294
		DEFAULT => -165
	},
	{#State 295
		ACTIONS => {
			'END' => 322
		}
	},
	{#State 296
		DEFAULT => -67
	},
	{#State 297
		ACTIONS => {
			'END' => 323
		}
	},
	{#State 298
		ACTIONS => {
			'IDENT' => 66,
			";" => 325,
			'DEFAULT' => 324,
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			'REF' => 61,
			"{" => 52,
			"\$" => 1,
			"[" => 53
		},
		GOTOS => {
			'ident' => 94,
			'item' => 3,
			'node' => 58,
			'sterm' => 55,
			'term' => 326,
			'lterm' => 12
		}
	},
	{#State 299
		ACTIONS => {
			'END' => 327
		}
	},
	{#State 300
		DEFAULT => -80
	},
	{#State 301
		ACTIONS => {
			";" => 328
		}
	},
	{#State 302
		ACTIONS => {
			'LITERAL' => 93,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			'IDENT' => 66,
			"(" => 39,
			"\$" => 1,
			"[" => 53,
			'REF' => 61,
			"{" => 52,
			'NOT' => 34
		},
		GOTOS => {
			'item' => 3,
			'ident' => 94,
			'lterm' => 12,
			'expr' => 329,
			'term' => 54,
			'sterm' => 55,
			'node' => 58
		}
	},
	{#State 303
		ACTIONS => {
			'END' => 330
		}
	},
	{#State 304
		ACTIONS => {
			'END' => 331
		}
	},
	{#State 305
		DEFAULT => -81
	},
	{#State 306
		ACTIONS => {
			'END' => 332
		}
	},
	{#State 307
		ACTIONS => {
			"[" => 53,
			"\$" => 1,
			'NOT' => 34,
			"{" => 52,
			'REF' => 61,
			"\${" => 30,
			'NUMBER' => 73,
			"\"" => 20,
			'LITERAL' => 253,
			'COMMA' => 254,
			"(" => 39,
			'IDENT' => 66
		},
		DEFAULT => -64,
		GOTOS => {
			'sterm' => 55,
			'term' => 54,
			'node' => 58,
			'param' => 255,
			'expr' => 256,
			'lterm' => 12,
			'item' => 250,
			'ident' => 251
		}
	},
	{#State 308
		ACTIONS => {
			'COMMA' => 254,
			'IDENT' => 66,
			"(" => 39,
			'LITERAL' => 253,
			"\"" => 20,
			'NUMBER' => 73,
			"\${" => 30,
			"{" => 52,
			'NOT' => 34,
			'REF' => 61,
			"\$" => 1,
			"[" => 53
		},
		DEFAULT => -65,
		GOTOS => {
			'ident' => 251,
			'item' => 250,
			'param' => 255,
			'node' => 58,
			'expr' => 256,
			'lterm' => 12,
			'sterm' => 55,
			'term' => 54
		}
	},
	{#State 309
		ACTIONS => {
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150,
			'CAT' => 149,
			'MOD' => 151,
			'DIV' => 155,
			"?" => 152,
			'BINOP' => 147,
			"/" => 146,
			'OR' => 148
		},
		DEFAULT => -144
	},
	{#State 310
		ACTIONS => {
			"\"" => 333
		}
	},
	{#State 311
		DEFAULT => -95
	},
	{#State 312
		DEFAULT => -96
	},
	{#State 313
		ACTIONS => {
			'LITERAL' => 42,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			'perl' => 36,
			'TRY' => 2,
			"\$" => 1,
			'CLEAR' => 38,
			'NOT' => 34,
			'WRAPPER' => 11,
			'PROCESS' => 8,
			'LAST' => 7,
			'WHILE' => 15,
			'SWITCH' => 16,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'THROW' => 56,
			'DEBUG' => 57,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'GET' => 69,
			'BLOCK' => 196,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'STOP' => 31,
			'SET' => 32,
			"\${" => 30,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			'IDENT' => 66,
			'IF' => 24,
			'REF' => 61
		},
		GOTOS => {
			'atomexpr' => 49,
			'term' => 54,
			'sterm' => 55,
			'switch' => 35,
			'condition' => 37,
			'item' => 3,
			'expr' => 241,
			'node' => 58,
			'mdir' => 334,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'directive' => 198,
			'assign' => 65,
			'javascript' => 23,
			'try' => 68,
			'ident' => 120,
			'atomdir' => 46,
			'filter' => 48,
			'lterm' => 12
		}
	},
	{#State 314
		DEFAULT => -83
	},
	{#State 315
		ACTIONS => {
			'END' => 335
		}
	},
	{#State 316
		DEFAULT => -89
	},
	{#State 317
		ACTIONS => {
			'CATCH' => 247,
			'FINAL' => 248
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 336
		}
	},
	{#State 318
		ACTIONS => {
			'DEBUG' => 57,
			'THROW' => 56,
			'META' => 60,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'SWITCH' => 16,
			'WHILE' => 15,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"[" => 53,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66,
			'STOP' => 31,
			'SET' => 32,
			"\${" => 30,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'GET' => 69,
			'USE' => 26,
			'BLOCK' => 72,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'REF' => 61,
			'MACRO' => 63,
			'CALL' => 41,
			"(" => 39,
			'RETURN' => 40,
			'VIEW' => 4,
			'LITERAL' => 42,
			'NOT' => 34,
			'CLEAR' => 38,
			'perl' => 36,
			"\$" => 1,
			'TRY' => 2,
			'RAW' => 47,
			'WRAPPER' => 11,
			'LAST' => 7,
			'PROCESS' => 8,
			'TEXT' => 44,
			'rawperl' => 9
		},
		DEFAULT => -3,
		GOTOS => {
			'defblockname' => 64,
			'raw' => 22,
			'loop' => 43,
			'wrapper' => 6,
			'setlist' => 62,
			'lterm' => 12,
			'block' => 337,
			'use' => 27,
			'filter' => 48,
			'defblock' => 70,
			'atomdir' => 46,
			'try' => 68,
			'ident' => 25,
			'capture' => 10,
			'javascript' => 23,
			'assign' => 65,
			'directive' => 45,
			'chunks' => 67,
			'condition' => 37,
			'anonblock' => 14,
			'term' => 54,
			'switch' => 35,
			'sterm' => 55,
			'view' => 13,
			'macro' => 33,
			'atomexpr' => 49,
			'chunk' => 5,
			'node' => 58,
			'expr' => 59,
			'statement' => 17,
			'item' => 3
		}
	},
	{#State 319
		ACTIONS => {
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'NEXT' => 21,
			'META' => 60,
			'WHILE' => 15,
			'SWITCH' => 16,
			'DEBUG' => 57,
			'THROW' => 56,
			"[" => 53,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"\${" => 30,
			'SET' => 32,
			'STOP' => 31,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'UNLESS' => 71,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'BLOCK' => 72,
			'USE' => 26,
			'GET' => 69,
			'IF' => 24,
			'IDENT' => 66,
			";" => -19,
			'MACRO' => 63,
			'REF' => 61,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'CLEAR' => 38,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'NOT' => 34,
			'WRAPPER' => 11,
			'RAW' => 47,
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 3,
			'chunk' => 5,
			'expr' => 59,
			'statement' => 17,
			'node' => 58,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'condition' => 37,
			'anonblock' => 14,
			'sterm' => 55,
			'switch' => 35,
			'term' => 54,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'atomdir' => 46,
			'chunks' => 67,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'lterm' => 12,
			'block' => 338,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'loop' => 43,
			'setlist' => 62,
			'wrapper' => 6,
			'defblockname' => 64,
			'raw' => 22
		}
	},
	{#State 320
		DEFAULT => -73
	},
	{#State 321
		ACTIONS => {
			"?" => 152,
			'DIV' => 155,
			'OR' => 148,
			'BINOP' => 147,
			'MOD' => 151,
			"/" => 146,
			'CMPOP' => 150,
			'AND' => 153,
			"+" => 154,
			'CAT' => 149
		},
		DEFAULT => -155
	},
	{#State 322
		DEFAULT => -78
	},
	{#State 323
		DEFAULT => -62
	},
	{#State 324
		ACTIONS => {
			";" => 339
		}
	},
	{#State 325
		ACTIONS => {
			'GET' => 69,
			'USE' => 26,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'FILTER' => 28,
			'SET' => 32,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			'STOP' => 31,
			"\${" => 30,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			'MACRO' => 63,
			'REF' => 61,
			'SWITCH' => 16,
			'WHILE' => 15,
			'META' => 60,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			"\"" => 20,
			'THROW' => 56,
			'DEBUG' => 57,
			"[" => 53,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			'WRAPPER' => 11,
			'RAW' => 47,
			'TEXT' => 44,
			'rawperl' => 9,
			'PROCESS' => 8,
			'LAST' => 7,
			'VIEW' => 4,
			'LITERAL' => 42,
			"(" => 39,
			'RETURN' => 40,
			'CALL' => 41,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'CLEAR' => 38,
			'NOT' => 34
		},
		DEFAULT => -3,
		GOTOS => {
			'capture' => 10,
			'try' => 68,
			'ident' => 25,
			'atomdir' => 46,
			'chunks' => 67,
			'directive' => 45,
			'javascript' => 23,
			'assign' => 65,
			'block' => 340,
			'lterm' => 12,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'loop' => 43,
			'setlist' => 62,
			'wrapper' => 6,
			'defblockname' => 64,
			'raw' => 22,
			'item' => 3,
			'chunk' => 5,
			'expr' => 59,
			'statement' => 17,
			'node' => 58,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'anonblock' => 14,
			'condition' => 37,
			'sterm' => 55,
			'switch' => 35,
			'term' => 54
		}
	},
	{#State 326
		ACTIONS => {
			";" => 341
		}
	},
	{#State 327
		DEFAULT => -53
	},
	{#State 328
		ACTIONS => {
			'LAST' => 7,
			'PROCESS' => 8,
			'rawperl' => 9,
			'TEXT' => 44,
			'RAW' => 47,
			'WRAPPER' => 11,
			'NOT' => 34,
			'perl' => 36,
			"\$" => 1,
			'TRY' => 2,
			'CLEAR' => 38,
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'LITERAL' => 42,
			'VIEW' => 4,
			'REF' => 61,
			'MACRO' => 63,
			";" => -19,
			'IDENT' => 66,
			'IF' => 24,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'GET' => 69,
			'USE' => 26,
			'SET' => 32,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			"\${" => 30,
			'STOP' => 31,
			'INSERT' => 50,
			"{" => 52,
			'FOR' => 51,
			"[" => 53,
			'THROW' => 56,
			'DEBUG' => 57,
			'SWITCH' => 16,
			'WHILE' => 15,
			"\"" => 20,
			'NEXT' => 21,
			'JAVASCRIPT' => 19,
			'META' => 60
		},
		DEFAULT => -3,
		GOTOS => {
			'atomexpr' => 49,
			'macro' => 33,
			'view' => 13,
			'term' => 54,
			'sterm' => 55,
			'switch' => 35,
			'condition' => 37,
			'anonblock' => 14,
			'item' => 3,
			'expr' => 59,
			'statement' => 17,
			'node' => 58,
			'chunk' => 5,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'raw' => 22,
			'defblockname' => 64,
			'directive' => 45,
			'chunks' => 67,
			'javascript' => 23,
			'assign' => 65,
			'capture' => 10,
			'try' => 68,
			'ident' => 25,
			'atomdir' => 46,
			'filter' => 48,
			'defblock' => 70,
			'use' => 27,
			'lterm' => 12,
			'block' => 342
		}
	},
	{#State 329
		ACTIONS => {
			'BINOP' => 147,
			"/" => 146,
			'MOD' => 151,
			'CAT' => 149,
			'OR' => 148,
			'DIV' => 155,
			";" => 343,
			"?" => 152,
			"+" => 154,
			'AND' => 153,
			'CMPOP' => 150
		}
	},
	{#State 330
		DEFAULT => -46
	},
	{#State 331
		DEFAULT => -94
	},
	{#State 332
		DEFAULT => -59
	},
	{#State 333
		DEFAULT => -102
	},
	{#State 334
		DEFAULT => -91
	},
	{#State 335
		DEFAULT => -48
	},
	{#State 336
		DEFAULT => -72
	},
	{#State 337
		ACTIONS => {
			'FINAL' => 248,
			'CATCH' => 247
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 344
		}
	},
	{#State 338
		ACTIONS => {
			'CATCH' => 247,
			'FINAL' => 248
		},
		DEFAULT => -74,
		GOTOS => {
			'final' => 345
		}
	},
	{#State 339
		ACTIONS => {
			'CLEAR' => 38,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'NOT' => 34,
			'LITERAL' => 42,
			'VIEW' => 4,
			'CALL' => 41,
			'RETURN' => 40,
			"(" => 39,
			'rawperl' => 9,
			'TEXT' => 44,
			'LAST' => 7,
			'PROCESS' => 8,
			'WRAPPER' => 11,
			'RAW' => 47,
			"[" => 53,
			"{" => 52,
			'FOR' => 51,
			'INSERT' => 50,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			"\"" => 20,
			'META' => 60,
			'SWITCH' => 16,
			'WHILE' => 15,
			'DEBUG' => 57,
			'THROW' => 56,
			'MACRO' => 63,
			'REF' => 61,
			'SET' => 32,
			'INCLUDE' => 74,
			'STOP' => 31,
			"\${" => 30,
			'NUMBER' => 73,
			'BLOCK' => 72,
			'FILTER' => 28,
			'DEFAULT' => 29,
			'UNLESS' => 71,
			'USE' => 26,
			'GET' => 69,
			'IF' => 24,
			'IDENT' => 66,
			";" => -19
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 3,
			'chunk' => 5,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'view' => 13,
			'atomexpr' => 49,
			'macro' => 33,
			'anonblock' => 14,
			'condition' => 37,
			'term' => 54,
			'sterm' => 55,
			'switch' => 35,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'atomdir' => 46,
			'chunks' => 67,
			'directive' => 45,
			'assign' => 65,
			'javascript' => 23,
			'block' => 346,
			'lterm' => 12,
			'defblock' => 70,
			'filter' => 48,
			'use' => 27,
			'loop' => 43,
			'setlist' => 62,
			'wrapper' => 6,
			'defblockname' => 64,
			'raw' => 22
		}
	},
	{#State 340
		DEFAULT => -56
	},
	{#State 341
		ACTIONS => {
			'CALL' => 41,
			"(" => 39,
			'RETURN' => 40,
			'VIEW' => 4,
			'LITERAL' => 42,
			'NOT' => 34,
			'CLEAR' => 38,
			"\$" => 1,
			'perl' => 36,
			'TRY' => 2,
			'RAW' => 47,
			'WRAPPER' => 11,
			'LAST' => 7,
			'PROCESS' => 8,
			'TEXT' => 44,
			'rawperl' => 9,
			'DEBUG' => 57,
			'THROW' => 56,
			'META' => 60,
			'NEXT' => 21,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'WHILE' => 15,
			'SWITCH' => 16,
			'FOR' => 51,
			"{" => 52,
			'INSERT' => 50,
			"[" => 53,
			'IF' => 24,
			";" => -19,
			'IDENT' => 66,
			"\${" => 30,
			'SET' => 32,
			'STOP' => 31,
			'INCLUDE' => 74,
			'NUMBER' => 73,
			'USE' => 26,
			'GET' => 69,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'REF' => 61,
			'MACRO' => 63
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 3,
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'sterm' => 55,
			'term' => 54,
			'switch' => 35,
			'condition' => 37,
			'anonblock' => 14,
			'directive' => 45,
			'chunks' => 67,
			'assign' => 65,
			'javascript' => 23,
			'ident' => 25,
			'try' => 68,
			'capture' => 10,
			'atomdir' => 46,
			'defblock' => 70,
			'filter' => 48,
			'use' => 27,
			'lterm' => 12,
			'block' => 347,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43,
			'raw' => 22,
			'defblockname' => 64
		}
	},
	{#State 342
		DEFAULT => -51
	},
	{#State 343
		ACTIONS => {
			'RETURN' => 40,
			"(" => 39,
			'CALL' => 41,
			'LITERAL' => 42,
			'VIEW' => 4,
			'NOT' => 34,
			"\$" => 1,
			'TRY' => 2,
			'perl' => 36,
			'CLEAR' => 38,
			'RAW' => 47,
			'WRAPPER' => 11,
			'PROCESS' => 8,
			'LAST' => 7,
			'rawperl' => 9,
			'TEXT' => 44,
			'THROW' => 56,
			'DEBUG' => 57,
			'SWITCH' => 16,
			'WHILE' => 15,
			"\"" => 20,
			'JAVASCRIPT' => 19,
			'NEXT' => 21,
			'META' => 60,
			'INSERT' => 50,
			'FOR' => 51,
			"{" => 52,
			"[" => 53,
			'IDENT' => 66,
			";" => -19,
			'IF' => 24,
			'UNLESS' => 71,
			'BLOCK' => 72,
			'DEFAULT' => 29,
			'FILTER' => 28,
			'USE' => 26,
			'GET' => 69,
			"\${" => 30,
			'NUMBER' => 73,
			'INCLUDE' => 74,
			'SET' => 32,
			'STOP' => 31,
			'REF' => 61,
			'MACRO' => 63
		},
		DEFAULT => -3,
		GOTOS => {
			'statement' => 17,
			'expr' => 59,
			'node' => 58,
			'chunk' => 5,
			'item' => 3,
			'sterm' => 55,
			'switch' => 35,
			'term' => 54,
			'anonblock' => 14,
			'condition' => 37,
			'macro' => 33,
			'atomexpr' => 49,
			'view' => 13,
			'defblock' => 70,
			'filter' => 48,
			'use' => 27,
			'lterm' => 12,
			'block' => 348,
			'chunks' => 67,
			'directive' => 45,
			'assign' => 65,
			'javascript' => 23,
			'try' => 68,
			'ident' => 25,
			'capture' => 10,
			'atomdir' => 46,
			'raw' => 22,
			'defblockname' => 64,
			'setlist' => 62,
			'wrapper' => 6,
			'loop' => 43
		}
	},
	{#State 344
		DEFAULT => -71
	},
	{#State 345
		DEFAULT => -70
	},
	{#State 346
		DEFAULT => -55
	},
	{#State 347
		ACTIONS => {
			'CASE' => 298
		},
		DEFAULT => -57,
		GOTOS => {
			'case' => 349
		}
	},
	{#State 348
		ACTIONS => {
			'ELSE' => 301,
			'ELSIF' => 302
		},
		DEFAULT => -52,
		GOTOS => {
			'else' => 350
		}
	},
	{#State 349
		DEFAULT => -54
	},
	{#State 350
		DEFAULT => -50
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 68 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 71 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 72 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 75 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 77 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 80 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2,
sub
#line 81 "Parser.yp"
{ return '' unless $_[1];
                           $_[0]->location() . $_[1];
                         }
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1, undef
	],
	[#Rule 17
		 'statement', 1,
sub
#line 95 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 18
		 'statement', 2,
sub
#line 96 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 19
		 'statement', 0, undef
	],
	[#Rule 20
		 'directive', 1,
sub
#line 100 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'directive', 1, undef
	],
	[#Rule 27
		 'directive', 1, undef
	],
	[#Rule 28
		 'atomexpr', 1,
sub
#line 115 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 29
		 'atomexpr', 1, undef
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 119 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 120 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 121 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 122 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 123 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 124 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 36
		 'atomdir', 2,
sub
#line 125 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 37
		 'atomdir', 2,
sub
#line 126 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 127 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 128 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 129 "Parser.yp"
{ $factory->clear()                   }
	],
	[#Rule 41
		 'atomdir', 1,
sub
#line 130 "Parser.yp"
{ $factory->break()                   }
	],
	[#Rule 42
		 'atomdir', 1,
sub
#line 131 "Parser.yp"
{ $factory->next()                    }
	],
	[#Rule 43
		 'atomdir', 2,
sub
#line 132 "Parser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
				          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
					  $factory->debug($_[2]);
				      }
				      else {
					  $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
				      }
				    }
	],
	[#Rule 44
		 'atomdir', 1, undef
	],
	[#Rule 45
		 'atomdir', 1, undef
	],
	[#Rule 46
		 'condition', 6,
sub
#line 145 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 47
		 'condition', 3,
sub
#line 146 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 48
		 'condition', 6,
sub
#line 148 "Parser.yp"
{ $factory->if("tt2_not($_[2])", @_[4, 5])  }
	],
	[#Rule 49
		 'condition', 3,
sub
#line 149 "Parser.yp"
{ $factory->if("tt2_not($_[3])", $_[1])     }
	],
	[#Rule 50
		 'else', 5,
sub
#line 153 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 51
		 'else', 3,
sub
#line 155 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 52
		 'else', 0,
sub
#line 156 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 53
		 'switch', 6,
sub
#line 160 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 54
		 'case', 5,
sub
#line 164 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 55
		 'case', 4,
sub
#line 166 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 56
		 'case', 3,
sub
#line 167 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 57
		 'case', 0,
sub
#line 168 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 58
		 '@1-3', 0,
sub
#line 171 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 59
		 'loop', 6,
sub
#line 172 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 60
		 'loop', 3,
sub
#line 176 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 61
		 '@2-3', 0,
sub
#line 177 "Parser.yp"
{ $_[0]->{ INWHILE }++                }
	],
	[#Rule 62
		 'loop', 6,
sub
#line 178 "Parser.yp"
{ $_[0]->{ INWHILE }--;
                                      $factory->while(@_[2, 5])           }
	],
	[#Rule 63
		 'loop', 3,
sub
#line 180 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 64
		 'loopvar', 4,
sub
#line 183 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 65
		 'loopvar', 4,
sub
#line 184 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 66
		 'loopvar', 2,
sub
#line 185 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 67
		 'wrapper', 5,
sub
#line 189 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 68
		 'wrapper', 3,
sub
#line 191 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 69
		 'try', 5,
sub
#line 195 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 70
		 'final', 5,
sub
#line 199 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 71
		 'final', 5,
sub
#line 202 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[5];                              }
	],
	[#Rule 72
		 'final', 4,
sub
#line 205 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 73
		 'final', 3,
sub
#line 207 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 74
		 'final', 0,
sub
#line 208 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 75
		 'use', 2,
sub
#line 211 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 76
		 'raw', 2,
sub
#line 214 "Parser.yp"
{ $factory->raw($_[2])                }
	],
	[#Rule 77
		 '@3-3', 0,
sub
#line 217 "Parser.yp"
{ $_[0]->push_defblock();		  }
	],
	[#Rule 78
		 'view', 6,
sub
#line 218 "Parser.yp"
{ $factory->view(@_[2,5], 
						     $_[0]->pop_defblock) }
	],
	[#Rule 79
		 '@4-2', 0,
sub
#line 222 "Parser.yp"
{ ${$_[0]->{ INJAVASCRIPT }}++;             }
	],
	[#Rule 80
		 'javascript', 5,
sub
#line 223 "Parser.yp"
{ ${$_[0]->{ INJAVASCRIPT }}--;
				      $_[0]->{ EVAL_JAVASCRIPT } 
				      ? $factory->javascript($_[4])             
				      : $factory->no_javascript();              }
	],
	[#Rule 81
		 'filter', 5,
sub
#line 230 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 82
		 'filter', 3,
sub
#line 232 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 83
		 'defblock', 5,
sub
#line 237 "Parser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
				      pop(@{ $_[0]->{ DEFBLOCKS } });
				      $_[0]->define_block($name, $_[4]); 
				      undef
				    }
	],
	[#Rule 84
		 'defblockname', 2,
sub
#line 244 "Parser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
				      $_[2];
				    }
	],
	[#Rule 85
		 'blockname', 1, undef
	],
	[#Rule 86
		 'blockname', 1,
sub
#line 250 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 87
		 'blockargs', 1, undef
	],
	[#Rule 88
		 'blockargs', 0, undef
	],
	[#Rule 89
		 'anonblock', 5,
sub
#line 258 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[2] }]\n"
					  if $_[2];
				      $factory->anon_block($_[4])         }
	],
	[#Rule 90
		 'capture', 3,
sub
#line 264 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 91
		 'macro', 6,
sub
#line 268 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 92
		 'macro', 3,
sub
#line 269 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 93
		 'mdir', 1, undef
	],
	[#Rule 94
		 'mdir', 4,
sub
#line 273 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 95
		 'margs', 2,
sub
#line 276 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 96
		 'margs', 2,
sub
#line 277 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 97
		 'margs', 1,
sub
#line 278 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 98
		 'metadata', 2,
sub
#line 281 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 99
		 'metadata', 2, undef
	],
	[#Rule 100
		 'metadata', 1, undef
	],
	[#Rule 101
		 'meta', 3,
sub
#line 286 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$//; 
						       s/\\'/'/g  }; 
					 [ @_[1,3] ] }
	],
	[#Rule 102
		 'meta', 5,
sub
#line 289 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 103
		 'meta', 3,
sub
#line 290 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 104
		 'term', 1, undef
	],
	[#Rule 105
		 'term', 1, undef
	],
	[#Rule 106
		 'lterm', 3,
sub
#line 302 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 107
		 'lterm', 3,
sub
#line 303 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 108
		 'lterm', 2,
sub
#line 304 "Parser.yp"
{ "{ }"                               }
	],
	[#Rule 109
		 'lterm', 3,
sub
#line 305 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 110
		 'sterm', 1,
sub
#line 308 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 111
		 'sterm', 2,
sub
#line 309 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 112
		 'sterm', 3,
sub
#line 310 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 113
		 'sterm', 1, undef
	],
	[#Rule 114
		 'sterm', 1, undef
	],
	[#Rule 115
		 'list', 2,
sub
#line 315 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 116
		 'list', 2, undef
	],
	[#Rule 117
		 'list', 1, undef
	],
	[#Rule 118
		 'range', 3,
sub
#line 320 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 119
		 'hash', 1, undef
	],
	[#Rule 120
		 'hash', 0,
sub
#line 325 "Parser.yp"
{ "" }
	],
	[#Rule 121
		 'params', 2,
sub
#line 328 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 122
		 'params', 2, undef
	],
	[#Rule 123
		 'params', 1, undef
	],
	[#Rule 124
		 'param', 3,
sub
#line 333 "Parser.yp"
{ "[$_[1]] = $_[3]"                    }
	],
	[#Rule 125
		 'param', 3,
sub
#line 334 "Parser.yp"
{ "[$_[1]] = $_[3]"                    }
	],
	[#Rule 126
		 'ident', 3,
sub
#line 337 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 127
		 'ident', 3,
sub
#line 338 "Parser.yp"
{ push(@{$_[1]}, 
					   map {($_, 0)} split(/\./, $_[3]));
				      $_[1];			          }
	],
	[#Rule 128
		 'ident', 1, undef
	],
	[#Rule 129
		 'node', 1,
sub
#line 344 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 130
		 'node', 4,
sub
#line 345 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 131
		 'item', 1,
sub
#line 348 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 132
		 'item', 3,
sub
#line 349 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 133
		 'item', 2,
sub
#line 350 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 134
		 'expr', 3,
sub
#line 355 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 135
		 'expr', 3,
sub
#line 356 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 136
		 'expr', 3,
sub
#line 357 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 137
		 'expr', 3,
sub
#line 358 "Parser.yp"
{ "math_floor($_[1] / $_[3])"         }
	],
	[#Rule 138
		 'expr', 3,
sub
#line 359 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 139
		 'expr', 3,
sub
#line 360 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 361 "Parser.yp"
{ "$_[1] .. $_[3]"                    }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 362 "Parser.yp"
{ "tt2_true($_[1]) and tt2_true($_[3])"                   }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 363 "Parser.yp"
{ "tt2_true($_[1]) or tt2_true($_[3])"                    }
	],
	[#Rule 143
		 'expr', 2,
sub
#line 364 "Parser.yp"
{ "tt2_not($_[2])"                         }
	],
	[#Rule 144
		 'expr', 5,
sub
#line 365 "Parser.yp"
{ "tt2_true($_[1]) and $_[3] or $_[5]"          }
	],
	[#Rule 145
		 'expr', 3,
sub
#line 366 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 146
		 'expr', 3,
sub
#line 367 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 147
		 'expr', 1, undef
	],
	[#Rule 148
		 'setlist', 2,
sub
#line 371 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 149
		 'setlist', 2, undef
	],
	[#Rule 150
		 'setlist', 1, undef
	],
	[#Rule 151
		 'assign', 3,
sub
#line 377 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 152
		 'assign', 3,
sub
#line 378 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 153
		 'args', 2,
sub
#line 385 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 154
		 'args', 2,
sub
#line 386 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 155
		 'args', 4,
sub
#line 387 "Parser.yp"
{ push(@{$_[1]->[0]}, "'', " . 
				      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 156
		 'args', 2,
sub
#line 389 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 157
		 'args', 0,
sub
#line 390 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 158
		 'lnameargs', 3,
sub
#line 400 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 159
		 'lnameargs', 1, undef
	],
	[#Rule 160
		 'lvalue', 1, undef
	],
	[#Rule 161
		 'lvalue', 3,
sub
#line 405 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 162
		 'lvalue', 1, undef
	],
	[#Rule 163
		 'nameargs', 3,
sub
#line 409 "Parser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 164
		 'nameargs', 2,
sub
#line 410 "Parser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 165
		 'nameargs', 4,
sub
#line 411 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 166
		 'names', 3,
sub
#line 414 "Parser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 167
		 'names', 1,
sub
#line 415 "Parser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 168
		 'name', 3,
sub
#line 418 "Parser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 169
		 'name', 1,
sub
#line 419 "Parser.yp"
{ "'$_[1]'" }
	],
	[#Rule 170
		 'name', 1, undef
	],
	[#Rule 171
		 'filename', 3,
sub
#line 431 "Parser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 172
		 'filename', 1, undef
	],
	[#Rule 173
		 'filepart', 1, undef
	],
	[#Rule 174
		 'filepart', 1, undef
	],
	[#Rule 175
		 'filepart', 1, undef
	],
	[#Rule 176
		 'quoted', 2,
sub
#line 445 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 177
		 'quoted', 0,
sub
#line 447 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 178
		 'quotable', 1,
sub
#line 450 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 179
		 'quotable', 1,
sub
#line 451 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 180
		 'quotable', 1,
sub
#line 452 "Parser.yp"
{ undef                               }
	]
];

1;
